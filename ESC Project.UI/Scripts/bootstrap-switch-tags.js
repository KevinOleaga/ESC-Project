(function () { var t = [].slice; !function (e, i) { "use strict"; var n; n = function () { function t(t, i) { null == i && (i = {}), this.$element = e(t), this.options = e.extend({}, e.fn.bootstrapSwitch.defaults, { state: this.$element.is(":checked"), size: this.$element.data("size"), animate: this.$element.data("animate"), disabled: this.$element.is(":disabled"), readonly: this.$element.is("[readonly]"), indeterminate: this.$element.data("indeterminate"), inverse: this.$element.data("inverse"), radioAllOff: this.$element.data("radio-all-off"), onColor: this.$element.data("on-color"), offColor: this.$element.data("off-color"), onText: this.$element.data("on-text"), offText: this.$element.data("off-text"), labelText: this.$element.data("label-text"), handleWidth: this.$element.data("handle-width"), labelWidth: this.$element.data("label-width"), baseClass: this.$element.data("base-class"), wrapperClass: this.$element.data("wrapper-class") }, i), this.prevOptions = {}, this.$wrapper = e("<div>", { class: function (t) { return function () { var e; return (e = ["" + t.options.baseClass].concat(t._getClasses(t.options.wrapperClass))).push(t.options.state ? t.options.baseClass + "-on" : t.options.baseClass + "-off"), null != t.options.size && e.push(t.options.baseClass + "-" + t.options.size), t.options.disabled && e.push(t.options.baseClass + "-disabled"), t.options.readonly && e.push(t.options.baseClass + "-readonly"), t.options.indeterminate && e.push(t.options.baseClass + "-indeterminate"), t.options.inverse && e.push(t.options.baseClass + "-inverse"), t.$element.attr("id") && e.push(t.options.baseClass + "-id-" + t.$element.attr("id")), e.join(" ") } }(this)() }), this.$container = e("<div>", { class: this.options.baseClass + "-container" }), this.$on = e("<span>", { html: this.options.onText, class: this.options.baseClass + "-handle-on " + this.options.baseClass + "-" + this.options.onColor }), this.$off = e("<span>", { html: this.options.offText, class: this.options.baseClass + "-handle-off " + this.options.baseClass + "-" + this.options.offColor }), this.$label = e("<span>", { html: this.options.labelText, class: this.options.baseClass + "-label" }), this.$element.on("init.bootstrapSwitch", function (e) { return function () { return e.options.onInit.apply(t, arguments) } }(this)), this.$element.on("switchChange.bootstrapSwitch", function (i) { return function (n) { if (!1 === i.options.onSwitchChange.apply(t, arguments)) return i.$element.is(":radio") ? e("[name='" + i.$element.attr("name") + "']").trigger("previousState.bootstrapSwitch", !0) : i.$element.trigger("previousState.bootstrapSwitch", !0) } }(this)), this.$container = this.$element.wrap(this.$container).parent(), this.$wrapper = this.$container.wrap(this.$wrapper).parent(), this.$element.before(this.options.inverse ? this.$off : this.$on).before(this.$label).before(this.options.inverse ? this.$on : this.$off), this.options.indeterminate && this.$element.prop("indeterminate", !0), this._init(), this._elementHandlers(), this._handleHandlers(), this._labelHandlers(), this._formHandler(), this._externalLabelHandler(), this.$element.trigger("init.bootstrapSwitch", this.options.state) } return t.prototype._constructor = t, t.prototype.setPrevOptions = function () { return this.prevOptions = e.extend(!0, {}, this.options) }, t.prototype.state = function (t, i) { return void 0 === t ? this.options.state : this.options.disabled || this.options.readonly ? this.$element : this.options.state && !this.options.radioAllOff && this.$element.is(":radio") ? this.$element : (this.$element.is(":radio") ? e("[name='" + this.$element.attr("name") + "']").trigger("setPreviousOptions.bootstrapSwitch") : this.$element.trigger("setPreviousOptions.bootstrapSwitch"), this.options.indeterminate && this.indeterminate(!1), t = !!t, this.$element.prop("checked", t).trigger("change.bootstrapSwitch", i), this.$element) }, t.prototype.toggleState = function (t) { return this.options.disabled || this.options.readonly ? this.$element : this.options.indeterminate ? (this.indeterminate(!1), this.state(!0)) : this.$element.prop("checked", !this.options.state).trigger("change.bootstrapSwitch", t) }, t.prototype.size = function (t) { return void 0 === t ? this.options.size : (null != this.options.size && this.$wrapper.removeClass(this.options.baseClass + "-" + this.options.size), t && this.$wrapper.addClass(this.options.baseClass + "-" + t), this._width(), this._containerPosition(), this.options.size = t, this.$element) }, t.prototype.animate = function (t) { return void 0 === t ? this.options.animate : (t = !!t, t === this.options.animate ? this.$element : this.toggleAnimate()) }, t.prototype.toggleAnimate = function () { return this.options.animate = !this.options.animate, this.$wrapper.toggleClass(this.options.baseClass + "-animate"), this.$element }, t.prototype.disabled = function (t) { return void 0 === t ? this.options.disabled : (t = !!t, t === this.options.disabled ? this.$element : this.toggleDisabled()) }, t.prototype.toggleDisabled = function () { return this.options.disabled = !this.options.disabled, this.$element.prop("disabled", this.options.disabled), this.$wrapper.toggleClass(this.options.baseClass + "-disabled"), this.$element }, t.prototype.readonly = function (t) { return void 0 === t ? this.options.readonly : (t = !!t, t === this.options.readonly ? this.$element : this.toggleReadonly()) }, t.prototype.toggleReadonly = function () { return this.options.readonly = !this.options.readonly, this.$element.prop("readonly", this.options.readonly), this.$wrapper.toggleClass(this.options.baseClass + "-readonly"), this.$element }, t.prototype.indeterminate = function (t) { return void 0 === t ? this.options.indeterminate : (t = !!t, t === this.options.indeterminate ? this.$element : this.toggleIndeterminate()) }, t.prototype.toggleIndeterminate = function () { return this.options.indeterminate = !this.options.indeterminate, this.$element.prop("indeterminate", this.options.indeterminate), this.$wrapper.toggleClass(this.options.baseClass + "-indeterminate"), this._containerPosition(), this.$element }, t.prototype.inverse = function (t) { return void 0 === t ? this.options.inverse : (t = !!t, t === this.options.inverse ? this.$element : this.toggleInverse()) }, t.prototype.toggleInverse = function () { var t, e; return this.$wrapper.toggleClass(this.options.baseClass + "-inverse"), e = this.$on.clone(!0), t = this.$off.clone(!0), this.$on.replaceWith(t), this.$off.replaceWith(e), this.$on = t, this.$off = e, this.options.inverse = !this.options.inverse, this.$element }, t.prototype.onColor = function (t) { var e; return e = this.options.onColor, void 0 === t ? e : (null != e && this.$on.removeClass(this.options.baseClass + "-" + e), this.$on.addClass(this.options.baseClass + "-" + t), this.options.onColor = t, this.$element) }, t.prototype.offColor = function (t) { var e; return e = this.options.offColor, void 0 === t ? e : (null != e && this.$off.removeClass(this.options.baseClass + "-" + e), this.$off.addClass(this.options.baseClass + "-" + t), this.options.offColor = t, this.$element) }, t.prototype.onText = function (t) { return void 0 === t ? this.options.onText : (this.$on.html(t), this._width(), this._containerPosition(), this.options.onText = t, this.$element) }, t.prototype.offText = function (t) { return void 0 === t ? this.options.offText : (this.$off.html(t), this._width(), this._containerPosition(), this.options.offText = t, this.$element) }, t.prototype.labelText = function (t) { return void 0 === t ? this.options.labelText : (this.$label.html(t), this._width(), this.options.labelText = t, this.$element) }, t.prototype.handleWidth = function (t) { return void 0 === t ? this.options.handleWidth : (this.options.handleWidth = t, this._width(), this._containerPosition(), this.$element) }, t.prototype.labelWidth = function (t) { return void 0 === t ? this.options.labelWidth : (this.options.labelWidth = t, this._width(), this._containerPosition(), this.$element) }, t.prototype.baseClass = function (t) { return this.options.baseClass }, t.prototype.wrapperClass = function (t) { return void 0 === t ? this.options.wrapperClass : (t || (t = e.fn.bootstrapSwitch.defaults.wrapperClass), this.$wrapper.removeClass(this._getClasses(this.options.wrapperClass).join(" ")), this.$wrapper.addClass(this._getClasses(t).join(" ")), this.options.wrapperClass = t, this.$element) }, t.prototype.radioAllOff = function (t) { return void 0 === t ? this.options.radioAllOff : (t = !!t) === this.options.radioAllOff ? this.$element : (this.options.radioAllOff = t, this.$element) }, t.prototype.onInit = function (t) { return void 0 === t ? this.options.onInit : (t || (t = e.fn.bootstrapSwitch.defaults.onInit), this.options.onInit = t, this.$element) }, t.prototype.onSwitchChange = function (t) { return void 0 === t ? this.options.onSwitchChange : (t || (t = e.fn.bootstrapSwitch.defaults.onSwitchChange), this.options.onSwitchChange = t, this.$element) }, t.prototype.destroy = function () { var t; return (t = this.$element.closest("form")).length && t.off("reset.bootstrapSwitch").removeData("bootstrap-switch"), this.$container.children().not(this.$element).remove(), this.$element.unwrap().unwrap().off(".bootstrapSwitch").removeData("bootstrap-switch"), this.$element }, t.prototype._width = function () { var t, e; return (t = this.$on.add(this.$off)).add(this.$label).css("width", ""), e = "auto" === this.options.handleWidth ? Math.max(this.$on.width(), this.$off.width()) : this.options.handleWidth, t.width(e), this.$label.width(function (t) { return function (i, n) { return "auto" !== t.options.labelWidth ? t.options.labelWidth : n < e ? e : n } }(this)), this._handleWidth = this.$on.outerWidth(), this._labelWidth = this.$label.outerWidth(), this.$container.width(2 * this._handleWidth + this._labelWidth), this.$wrapper.width(this._handleWidth + this._labelWidth) }, t.prototype._containerPosition = function (t, e) { if (null == t && (t = this.options.state), this.$container.css("margin-left", function (e) { return function () { var i; return i = [0, "-" + e._handleWidth + "px"], e.options.indeterminate ? "-" + e._handleWidth / 2 + "px" : t ? e.options.inverse ? i[1] : i[0] : e.options.inverse ? i[0] : i[1] } }(this)), e) return setTimeout(function () { return e() }, 50) }, t.prototype._init = function () { var t, e; return t = function (t) { return function () { return t.setPrevOptions(), t._width(), t._containerPosition(null, function () { if (t.options.animate) return t.$wrapper.addClass(t.options.baseClass + "-animate") }) } }(this), this.$wrapper.is(":visible") ? t() : e = i.setInterval(function (n) { return function () { if (n.$wrapper.is(":visible")) return t(), i.clearInterval(e) } }(this), 50) }, t.prototype._elementHandlers = function () { return this.$element.on({ "setPreviousOptions.bootstrapSwitch": function (t) { return function (e) { return t.setPrevOptions() } }(this), "previousState.bootstrapSwitch": function (t) { return function (e) { return t.options = t.prevOptions, t.options.indeterminate && t.$wrapper.addClass(t.options.baseClass + "-indeterminate"), t.$element.prop("checked", t.options.state).trigger("change.bootstrapSwitch", !0) } }(this), "change.bootstrapSwitch": function (t) { return function (i, n) { var o; if (i.preventDefault(), i.stopImmediatePropagation(), o = t.$element.is(":checked"), t._containerPosition(o), o !== t.options.state) return t.options.state = o, t.$wrapper.toggleClass(t.options.baseClass + "-off").toggleClass(t.options.baseClass + "-on"), n ? void 0 : (t.$element.is(":radio") && e("[name='" + t.$element.attr("name") + "']").not(t.$element).prop("checked", !1).trigger("change.bootstrapSwitch", !0), t.$element.trigger("switchChange.bootstrapSwitch", [o])) } }(this), "focus.bootstrapSwitch": function (t) { return function (e) { return e.preventDefault(), t.$wrapper.addClass(t.options.baseClass + "-focused") } }(this), "blur.bootstrapSwitch": function (t) { return function (e) { return e.preventDefault(), t.$wrapper.removeClass(t.options.baseClass + "-focused") } }(this), "keydown.bootstrapSwitch": function (t) { return function (e) { if (e.which && !t.options.disabled && !t.options.readonly) switch (e.which) { case 37: return e.preventDefault(), e.stopImmediatePropagation(), t.state(!1); case 39: return e.preventDefault(), e.stopImmediatePropagation(), t.state(!0) } } }(this) }) }, t.prototype._handleHandlers = function () { return this.$on.on("click.bootstrapSwitch", function (t) { return function (e) { return e.preventDefault(), e.stopPropagation(), t.state(!1), t.$element.trigger("focus.bootstrapSwitch") } }(this)), this.$off.on("click.bootstrapSwitch", function (t) { return function (e) { return e.preventDefault(), e.stopPropagation(), t.state(!0), t.$element.trigger("focus.bootstrapSwitch") } }(this)) }, t.prototype._labelHandlers = function () { return this.$label.on({ click: function (t) { return t.stopPropagation() }, "mousedown.bootstrapSwitch touchstart.bootstrapSwitch": function (t) { return function (e) { if (!(t._dragStart || t.options.disabled || t.options.readonly)) return e.preventDefault(), e.stopPropagation(), t._dragStart = (e.pageX || e.originalEvent.touches[0].pageX) - parseInt(t.$container.css("margin-left"), 10), t.options.animate && t.$wrapper.removeClass(t.options.baseClass + "-animate"), t.$element.trigger("focus.bootstrapSwitch") } }(this), "mousemove.bootstrapSwitch touchmove.bootstrapSwitch": function (t) { return function (e) { var i; if (null != t._dragStart && (e.preventDefault(), !((i = (e.pageX || e.originalEvent.touches[0].pageX) - t._dragStart) < -t._handleWidth || i > 0))) return t._dragEnd = i, t.$container.css("margin-left", t._dragEnd + "px") } }(this), "mouseup.bootstrapSwitch touchend.bootstrapSwitch": function (t) { return function (e) { var i; if (t._dragStart) return e.preventDefault(), t.options.animate && t.$wrapper.addClass(t.options.baseClass + "-animate"), t._dragEnd ? (i = t._dragEnd > -t._handleWidth / 2, t._dragEnd = !1, t.state(t.options.inverse ? !i : i)) : t.state(!t.options.state), t._dragStart = !1 } }(this), "mouseleave.bootstrapSwitch": function (t) { return function (e) { return t.$label.trigger("mouseup.bootstrapSwitch") } }(this) }) }, t.prototype._externalLabelHandler = function () { var t; return (t = this.$element.closest("label")).on("click", function (e) { return function (i) { if (i.preventDefault(), i.stopImmediatePropagation(), i.target === t[0]) return e.toggleState() } }(this)) }, t.prototype._formHandler = function () { var t; if (!(t = this.$element.closest("form")).data("bootstrap-switch")) return t.on("reset.bootstrapSwitch", function () { return i.setTimeout(function () { return t.find("input").filter(function () { return e(this).data("bootstrap-switch") }).each(function () { return e(this).bootstrapSwitch("state", this.checked) }) }, 1) }).data("bootstrap-switch", !0) }, t.prototype._getClasses = function (t) { var i, n, o, s; if (!e.isArray(t)) return [this.options.baseClass + "-" + t]; for (n = [], o = 0, s = t.length; o < s; o++) i = t[o], n.push(this.options.baseClass + "-" + i); return n }, t }(), e.fn.bootstrapSwitch = function () { var i, o, s; return o = arguments[0], i = 2 <= arguments.length ? t.call(arguments, 1) : [], s = this, this.each(function () { var t, a; if (t = e(this), (a = t.data("bootstrap-switch")) || t.data("bootstrap-switch", a = new n(this, o)), "string" == typeof o) return s = a[o].apply(a, i) }), s }, e.fn.bootstrapSwitch.Constructor = n, e.fn.bootstrapSwitch.defaults = { state: !0, size: null, animate: !0, disabled: !1, readonly: !1, indeterminate: !1, inverse: !1, radioAllOff: !1, onColor: "primary", offColor: "default", onText: "ON", offText: "OFF", labelText: "&nbsp;", handleWidth: "auto", labelWidth: "auto", baseClass: "bootstrap-switch", wrapperClass: "wrapper", onInit: function () { }, onSwitchChange: function () { } } }(window.jQuery, window) }).call(this), function (t) { "use strict"; function e(e, i) { this.isInit = !0, this.itemsArray = [], this.$element = t(e), this.$element.hide(), this.isSelect = "SELECT" === e.tagName, this.multiple = this.isSelect && e.hasAttribute("multiple"), this.objectItems = i && i.itemValue, this.placeholderText = e.hasAttribute("placeholder") ? this.$element.attr("placeholder") : "", this.inputSize = Math.max(1, this.placeholderText.length), this.$container = t('<div class="bootstrap-tagsinput"></div>'), this.$input = t('<input type="text" placeholder="' + this.placeholderText + '"/>').appendTo(this.$container), this.$element.before(this.$container), this.build(i), this.isInit = !1 } function i(t, e) { if ("function" != typeof t[e]) { var i = t[e]; t[e] = function (t) { return t[i] } } } function n(t, e) { if ("function" != typeof t[e]) { var i = t[e]; t[e] = function () { return i } } } function o(t) { return t ? l.text(t).html() : "" } function s(t) { var e = 0; if (document.selection) { t.focus(); var i = document.selection.createRange(); i.moveStart("character", -t.value.length), e = i.text.length } else (t.selectionStart || "0" == t.selectionStart) && (e = t.selectionStart); return e } function a(e, i) { var n = !1; return t.each(i, function (t, i) { if ("number" == typeof i && e.which === i) return n = !0, !1; if (e.which === i.which) { var o = !i.hasOwnProperty("altKey") || e.altKey === i.altKey, s = !i.hasOwnProperty("shiftKey") || e.shiftKey === i.shiftKey, a = !i.hasOwnProperty("ctrlKey") || e.ctrlKey === i.ctrlKey; if (o && s && a) return n = !0, !1 } }), n } var r = { tagClass: function (t) { return "label label-info" }, focusClass: "focus", itemValue: function (t) { return t ? t.toString() : t }, itemText: function (t) { return this.itemValue(t) }, itemTitle: function (t) { return null }, freeInput: !0, addOnBlur: !0, maxTags: void 0, maxChars: void 0, confirmKeys: [13, 44], delimiter: ",", delimiterRegex: null, cancelConfirmKeysOnEmpty: !1, onTagExists: function (t, e) { e.hide().fadeIn() }, trimValue: !1, allowDuplicates: !1, triggerChange: !0 }; e.prototype = { constructor: e, add: function (e, i, n) { var s = this; if (!(s.options.maxTags && s.itemsArray.length >= s.options.maxTags) && (!1 === e || e)) { if ("string" == typeof e && s.options.trimValue && (e = t.trim(e)), "object" == typeof e && !s.objectItems) throw "Can't add objects when itemValue option is not set"; if (!e.toString().match(/^\s*$/)) { if (s.isSelect && !s.multiple && s.itemsArray.length > 0 && s.remove(s.itemsArray[0]), "string" == typeof e && "INPUT" === this.$element[0].tagName) { var a = s.options.delimiterRegex ? s.options.delimiterRegex : s.options.delimiter, r = e.split(a); if (r.length > 1) { for (var l = 0; l < r.length; l++) this.add(r[l], !0); return void (i || s.pushVal(s.options.triggerChange)) } } var p = s.options.itemValue(e), h = s.options.itemText(e), u = s.options.tagClass(e), c = s.options.itemTitle(e), d = t.grep(s.itemsArray, function (t) { return s.options.itemValue(t) === p })[0]; if (!d || s.options.allowDuplicates) { if (!(s.items().toString().length + e.length + 1 > s.options.maxInputLength)) { var f = t.Event("beforeItemAdd", { item: e, cancel: !1, options: n }); if (s.$element.trigger(f), !f.cancel) { s.itemsArray.push(e); var m = t('<span class="tag ' + o(u) + (null !== c ? '" title="' + c : "") + '">' + o(h) + '<span data-role="remove"></span></span>'); m.data("item", e), s.findInputWrapper().before(m), m.after(" "); var g = t('option[value="' + encodeURIComponent(p) + '"]', s.$element).length || t('option[value="' + o(p) + '"]', s.$element).length; if (s.isSelect && !g) { var $ = t("<option selected>" + o(h) + "</option>"); $.data("item", e), $.attr("value", p), s.$element.append($) } i || s.pushVal(s.options.triggerChange), s.options.maxTags !== s.itemsArray.length && s.items().toString().length !== s.options.maxInputLength || s.$container.addClass("bootstrap-tagsinput-max"), t(".typeahead, .twitter-typeahead", s.$container).length && s.$input.typeahead("val", ""), this.isInit ? s.$element.trigger(t.Event("itemAddedOnInit", { item: e, options: n })) : s.$element.trigger(t.Event("itemAdded", { item: e, options: n })) } } } else if (s.options.onTagExists) { var v = t(".tag", s.$container).filter(function () { return t(this).data("item") === d }); s.options.onTagExists(e, v) } } } }, remove: function (e, i, n) { var o = this; if (o.objectItems && (e = "object" == typeof e ? t.grep(o.itemsArray, function (t) { return o.options.itemValue(t) == o.options.itemValue(e) }) : t.grep(o.itemsArray, function (t) { return o.options.itemValue(t) == e }), e = e[e.length - 1]), e) { var s = t.Event("beforeItemRemove", { item: e, cancel: !1, options: n }); if (o.$element.trigger(s), s.cancel) return; t(".tag", o.$container).filter(function () { return t(this).data("item") === e }).remove(), t("option", o.$element).filter(function () { return t(this).data("item") === e }).remove(), -1 !== t.inArray(e, o.itemsArray) && o.itemsArray.splice(t.inArray(e, o.itemsArray), 1) } i || o.pushVal(o.options.triggerChange), o.options.maxTags > o.itemsArray.length && o.$container.removeClass("bootstrap-tagsinput-max"), o.$element.trigger(t.Event("itemRemoved", { item: e, options: n })) }, removeAll: function () { var e = this; for (t(".tag", e.$container).remove(), t("option", e.$element).remove() ; e.itemsArray.length > 0;) e.itemsArray.pop(); e.pushVal(e.options.triggerChange) }, refresh: function () { var e = this; t(".tag", e.$container).each(function () { var i = t(this), n = i.data("item"), s = e.options.itemValue(n), a = e.options.itemText(n), r = e.options.tagClass(n); i.attr("class", null), i.addClass("tag " + o(r)), i.contents().filter(function () { return 3 == this.nodeType })[0].nodeValue = o(a), e.isSelect && t("option", e.$element).filter(function () { return t(this).data("item") === n }).attr("value", s) }) }, items: function () { return this.itemsArray }, pushVal: function () { var e = this, i = t.map(e.items(), function (t) { return e.options.itemValue(t).toString() }); e.$element.val(i, !0), e.options.triggerChange && e.$element.trigger("change") }, build: function (e) { var o = this; if (o.options = t.extend({}, r, e), o.objectItems && (o.options.freeInput = !1), i(o.options, "itemValue"), i(o.options, "itemText"), n(o.options, "tagClass"), o.options.typeahead) { var l = o.options.typeahead || {}; n(l, "source"), o.$input.typeahead(t.extend({}, l, { source: function (e, i) { function n(t) { for (var e = [], n = 0; n < t.length; n++) { var a = o.options.itemText(t[n]); s[a] = t[n], e.push(a) } i(e) } this.map = {}; var s = this.map, a = l.source(e); t.isFunction(a.success) ? a.success(n) : t.isFunction(a.then) ? a.then(n) : t.when(a).then(n) }, updater: function (t) { return o.add(this.map[t]), this.map[t] }, matcher: function (t) { return -1 !== t.toLowerCase().indexOf(this.query.trim().toLowerCase()) }, sorter: function (t) { return t.sort() }, highlighter: function (t) { var e = new RegExp("(" + this.query + ")", "gi"); return t.replace(e, "<strong>$1</strong>") } })) } if (o.options.typeaheadjs) { var p = o.options.typeaheadjs; t.isArray(p) || (p = [null, p]); var h = p[1].valueKey, u = h ? function (t) { return t[h] } : function (t) { return t }; t.fn.typeahead.apply(o.$input, p).on("typeahead:selected", t.proxy(function (t, e) { o.add(u(e)), o.$input.typeahead("val", "") }, o)) } o.$container.on("click", t.proxy(function (t) { o.$element.attr("disabled") || o.$input.removeAttr("disabled"), o.$input.focus() }, o)), o.options.addOnBlur && o.options.freeInput && o.$input.on("focusout", t.proxy(function (e) { 0 === t(".typeahead, .twitter-typeahead", o.$container).length && (o.add(o.$input.val()), o.$input.val("")) }, o)), o.$container.on({ focusin: function () { o.$container.addClass(o.options.focusClass) }, focusout: function () { o.$container.removeClass(o.options.focusClass) } }), o.$container.on("keydown", "input", t.proxy(function (e) { var i = t(e.target), n = o.findInputWrapper(); if (o.$element.attr("disabled")) o.$input.attr("disabled", "disabled"); else { switch (e.which) { case 8: if (0 === s(i[0])) { var a = n.prev(); a.length && o.remove(a.data("item")) } break; case 46: if (0 === s(i[0])) { var r = n.next(); r.length && o.remove(r.data("item")) } break; case 37: var l = n.prev(); 0 === i.val().length && l[0] && (l.before(n), i.focus()); break; case 39: var p = n.next(); 0 === i.val().length && p[0] && (p.after(n), i.focus()) } var h = i.val().length; Math.ceil(h / 5); i.attr("size", Math.max(this.inputSize, i.val().length)) } }, o)), o.$container.on("keypress", "input", t.proxy(function (e) { var i = t(e.target); if (o.$element.attr("disabled")) o.$input.attr("disabled", "disabled"); else { var n = i.val(), s = o.options.maxChars && n.length >= o.options.maxChars; o.options.freeInput && (a(e, o.options.confirmKeys) || s) && (0 !== n.length && (o.add(s ? n.substr(0, o.options.maxChars) : n), i.val("")), !1 === o.options.cancelConfirmKeysOnEmpty && e.preventDefault()); var r = i.val().length; Math.ceil(r / 5); i.attr("size", Math.max(this.inputSize, i.val().length)) } }, o)), o.$container.on("click", "[data-role=remove]", t.proxy(function (e) { o.$element.attr("disabled") || o.remove(t(e.target).closest(".tag").data("item")) }, o)), o.options.itemValue === r.itemValue && ("INPUT" === o.$element[0].tagName ? o.add(o.$element.val()) : t("option", o.$element).each(function () { o.add(t(this).attr("value"), !0) })) }, destroy: function () { var t = this; t.$container.off("keypress", "input"), t.$container.off("click", "[role=remove]"), t.$container.remove(), t.$element.removeData("tagsinput"), t.$element.show() }, focus: function () { this.$input.focus() }, input: function () { return this.$input }, findInputWrapper: function () { for (var e = this.$input[0], i = this.$container[0]; e && e.parentNode !== i;) e = e.parentNode; return t(e) } }, t.fn.tagsinput = function (i, n, o) { var s = []; return this.each(function () { var a = t(this).data("tagsinput"); if (a) if (i || n) { if (void 0 !== a[i]) { if (3 === a[i].length && void 0 !== o) r = a[i](n, null, o); else var r = a[i](n); void 0 !== r && s.push(r) } } else s.push(a); else a = new e(this, i), t(this).data("tagsinput", a), s.push(a), "SELECT" === this.tagName && t("option", t(this)).attr("selected", "selected"), t(this).val(t(this).val()) }), "string" == typeof i ? s.length > 1 ? s : s[0] : s }, t.fn.tagsinput.Constructor = e; var l = t("<div />"); t(function () { t("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput() }) }(window.jQuery);